diff --git a/CMakeLists.txt b/CMakeLists.txt
old mode 100755
new mode 100644
diff --git a/examples/core/core_input_gamepad.c b/examples/core/core_input_gamepad.c
index 3595329b..a70e9de4 100644
--- a/examples/core/core_input_gamepad.c
+++ b/examples/core/core_input_gamepad.c
@@ -110,7 +110,7 @@ int main(void)
                     //DrawText(TextFormat("Xbox axis LT: %02.02f", GetGamepadAxisMovement(0, GAMEPAD_AXIS_LEFT_TRIGGER)), 10, 40, 10, BLACK);
                     //DrawText(TextFormat("Xbox axis RT: %02.02f", GetGamepadAxisMovement(0, GAMEPAD_AXIS_RIGHT_TRIGGER)), 10, 60, 10, BLACK);
                 }
-                else if (IsGamepadName(0, PS3_NAME_ID))
+                else if (true)//IsGamepadName(0, PS3_NAME_ID))
                 {
                     DrawTexture(texPs3Pad, 0, 0, DARKGRAY);
 
@@ -140,14 +140,14 @@ int main(void)
                     // Draw axis: left joystick
                     DrawCircle(319, 255, 35, BLACK);
                     DrawCircle(319, 255, 31, LIGHTGRAY);
-                    DrawCircle(319 + ((int)GetGamepadAxisMovement(0, GAMEPAD_AXIS_LEFT_X) * 20),
-                               255 + ((int)GetGamepadAxisMovement(0, GAMEPAD_AXIS_LEFT_Y) * 20), 25, BLACK);
+                    DrawCircle(319 + (GetGamepadAxisMovement(0, GAMEPAD_AXIS_LEFT_X) * 20),
+                               255 + (GetGamepadAxisMovement(0, GAMEPAD_AXIS_LEFT_Y) * 20), 25, BLACK);
 
                     // Draw axis: right joystick
                     DrawCircle(475, 255, 35, BLACK);
                     DrawCircle(475, 255, 31, LIGHTGRAY);
-                    DrawCircle(475 + ((int)GetGamepadAxisMovement(0, GAMEPAD_AXIS_RIGHT_X)*20),
-                               255 + ((int)GetGamepadAxisMovement(0, GAMEPAD_AXIS_RIGHT_Y)*20), 25, BLACK);
+                    DrawCircle(475 + (GetGamepadAxisMovement(0, GAMEPAD_AXIS_RIGHT_X)*20),
+                               255 + (GetGamepadAxisMovement(0, GAMEPAD_AXIS_RIGHT_Y)*20), 25, BLACK);
 
                     // Draw axis: left-right triggers
                     DrawRectangle(169, 48, 15, 70, GRAY);
diff --git a/src/core.c b/src/core.c
index f4d64b7f..bf6a76a8 100644
--- a/src/core.c
+++ b/src/core.c
@@ -4568,7 +4568,7 @@ static void Wait(float ms)
         // NOTE: Use nanosleep() on Unix platforms... usleep() it's deprecated.
         while (nanosleep(&req, &req) == -1) continue;
     #endif
-    #if defined(__APPLE__)
+    #if defined(__APPLE__) || defined(__HAIKU__)
         usleep(ms*1000.0f);
     #endif
 
diff --git a/src/external/miniaudio.h b/src/external/miniaudio.h
index 60522da5..79ebd543 100644
--- a/src/external/miniaudio.h
+++ b/src/external/miniaudio.h
@@ -10403,7 +10403,7 @@ static ma_result ma_thread_create__posix(ma_thread* pThread, ma_thread_priority
             }
 #endif
         } else if (priority == ma_thread_priority_realtime) {
-#ifdef SCHED_FIFO
+#if defined(SCHED_FIFO) && !defined(__HAIKU__)
             if (pthread_attr_setschedpolicy(&attr, SCHED_FIFO) == 0) {
                 scheduler = SCHED_FIFO;
             }
@@ -32340,7 +32340,7 @@ static ma_result ma_context_init_backend_apis__nix(ma_context* pContext)
     pContext->posix.pthread_cond_signal         = (ma_proc)pthread_cond_signal;
     pContext->posix.pthread_attr_init           = (ma_proc)pthread_attr_init;
     pContext->posix.pthread_attr_destroy        = (ma_proc)pthread_attr_destroy;
-#if !defined(__EMSCRIPTEN__)
+#if !defined(__EMSCRIPTEN__) && !defined(__HAIKU__)
     pContext->posix.pthread_attr_setschedpolicy = (ma_proc)pthread_attr_setschedpolicy;
     pContext->posix.pthread_attr_getschedparam  = (ma_proc)pthread_attr_getschedparam;
     pContext->posix.pthread_attr_setschedparam  = (ma_proc)pthread_attr_setschedparam;
